
if (db_id('HW10') is not null) 
drop  database HW10;

CREATE DATABASE HW10;
go

USE HW10;
GO

IF EXISTS(SELECT * FROM SYS.OBJECTS
	WHERE OBJECT_ID = OBJECT_ID('EMPLOYEES'))
		DROP TABLE EMPLOYEES;

CREATE table EMPLOYEES
(ID int identity(1,1) PRIMARY KEY CLUSTERED,
 BADGENUM INT NOT NULL UNIQUE,
 TITLE VARCHAR(20),
 DATEHIRED DATETIME2 NOT NULL
 );
 GO

 CREATE TRIGGER TRIGEMPLOYEES
	ON [dbo].EMPLOYEES
	AFTER INSERT, UPDATE
	AS 

  DECLARE @BADGENUM INT;
  
  SELECT @BADGENUM = I.BADGENUM FROM INSERTED I;
 

  IF (@BADGENUM BETWEEN 0 AND 300)
	BEGIN
		UPDATE EMPLOYEES SET TITLE = 'CLERK' 
		WHERE BADGENUM = @BADGENUM
	END
	ELSE IF (@BADGENUM BETWEEN 300 AND 600)
	BEGIN
		UPDATE EMPLOYEES SET TITLE = 'OFFICE EMPLOYEE'
		WHERE BADGENUM = @BADGENUM
	END
	ELSE IF (@BADGENUM BETWEEN 700 AND 800)
	BEGIN
		UPDATE EMPLOYEES SET TITLE = 'MANAGER'
		WHERE BADGENUM = @BADGENUM
	END
	ELSE IF (@BADGENUM BETWEEN 900 AND 1000)
	BEGIN
		UPDATE EMPLOYEES SET TITLE = 'DIRECTOR'
		WHERE BADGENUM = @BADGENUM
	END
	
GO

--delete from employees

--DROP TABLE EMPLOYEES

--SELECT * FROM EMPLOYEES;

DECLARE @Counter INT = 1;
DECLARE @RNDNUM INT;
WHILE (@Counter <= 25) BEGIN
    SET @RNDNUM = CAST(RAND() * 1000 AS INT);
    IF NOT EXISTS (SELECT BadgeNum from dbo.Employees WHERE BadgeNum = @RNDNUM)
        BEGIN
        INSERT INTO dbo.Employees (BadgeNum, Title, DATEHired)
        VALUES (@RNDNUM,'Null', GETDATE());
        SET @Counter += 1;
        END;
    ELSE BEGIN
        Continue;
    END;
END;
GO

DECLARE @BADGENUM INT;
DECLARE @TITLE VARCHAR(20);
DECLARE @DATEHIRED DATETIME;

DECLARE EMP_CUR CURSOR FAST_FORWARD FOR
    SELECT BADGENUM, TITLE,DATEHIRED FROM DBO.EMPLOYEES

OPEN EMP_CUR;

FETCH NEXT FROM EMP_CUR INTO @BADGENUM, @TITLE, @DATEHIRED;

WHILE @@FETCH_STATUS = 0 BEGIN
	PRINT 'BADGENUM = ' + CONVERT(NVARCHAR(4),@BADGENUM)  + ' TITLE = ' + @TITLE + ' DATEHIRED = ' + CONVERT(NVARCHAR(30), @DATEHIRED);
	
FETCH NEXT FROM EMP_CUR INTO @BADGENUM, @TITLE, @DATEHIRED;
END;

CLOSE EMP_CUR;
DEALLOCATE EMP_CUR;





	



	


 


